version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: lifesync
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - lifesync-network

  auth-service:
    build:
      context: .
      dockerfile: services/auth/Dockerfile
    environment:
      ENVIRONMENT: development
      SERVICE_VERSION: 1.0.0
      LOG_LEVEL: debug
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/lifesync?sslmode=disable
      JWT_SECRET: ${JWT_SECRET:-development-secret-key}
      AUTH_SERVICE_PORT: 8080
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8000}
    depends_on:
      - postgres
    networks:
      - lifesync-network

  flowtime-service:
    build:
      context: .
      dockerfile: services/flowtime/Dockerfile
    environment:
      ENVIRONMENT: development
      SERVICE_VERSION: 1.0.0
      LOG_LEVEL: debug
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/lifesync?sslmode=disable
      JWT_SECRET: ${JWT_SECRET:-development-secret-key}
      FLOWTIME_SERVICE_PORT: 8081
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8000}
    depends_on:
      - postgres
    networks:
      - lifesync-network

  api-gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    environment:
      ENVIRONMENT: development
      LOG_LEVEL: debug
      JWT_SECRET: ${JWT_SECRET:-development-secret-key}
      AUTH_SERVICE_URL: http://auth-service:8080
      FLOWTIME_SERVICE_URL: http://flowtime-service:8081
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000}
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
      - flowtime-service
    networks:
      - lifesync-network

volumes:
  postgres_data:

networks:
  lifesync-network:
    driver: bridge